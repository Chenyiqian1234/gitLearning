// System
void AppInit(void);
void AppMain(void);
void LibSystem5vOutput(UINT8 Command);
void LibSystem12vOutput(UINT8 Command);
UINT8 LibPinoutsRead(UINT8 Pinouts);
UINT8 LibPinoutsSelect(UINT8 Pinouts,UINT8 Function);
void LibSystemPinoutsDriverPin1(UINT8 Function);
void LibSystemPinoutsDriverPin2(UINT8 Function);
void LibSystemPinoutsDriverPin3(UINT8 Function);
void LibSystemPinoutsDriverPin4(UINT8 Function);
void LibSystemPinoutsDriverPin5(UINT8 Function);
void LibSystemPinoutsDriverPin6(UINT8 Function);
void LibSystemPinoutsDriverPin7(UINT8 Function);
void LibSystemPinoutsDriverPin8(UINT8 Function);
void LibSystemPinoutsDriverPin9(UINT8 Function);
void LibSystemPinoutsDriverPin10(UINT8 Function);
void LibSystemPinoutsDriverPin11(UINT8 Function);
void LibSystemPinoutsDriverPin12(UINT8 Function);
void LibSystemPinoutsDriverPin13(UINT8 Function);
void LibSystemPinoutsDriverPin14(UINT8 Function);
void LibSystemPinoutsDriverPin15(UINT8 Function);
void LibSystemPinoutsDriverPin16(UINT8 Function);
void LibSystemPinoutsDriverPin17(UINT8 Function);
void LibSystemPinoutsDriverPin18(UINT8 Function);
void LibSystemPinoutsDriverPin19(UINT8 Function);
void LibSystemPinoutsDriverPin20(UINT8 Function);
void LibSystemPinoutsDriverPin21(UINT8 Function);
void LibSystemPinoutsDriverPin22(UINT8 Function);
void LibSystemPinoutsDriverPin23(UINT8 Function);
void LibSystemPinoutsDriverPin24(UINT8 Function);
void LibSystemPinoutsDriverPin25(UINT8 Function);
void LibSystemPinoutsDriverPin26(UINT8 Function);
void LibSystemPinoutsDriverPin27(UINT8 Function);
void LibSystemPinoutsDriverPin28(UINT8 Function);
void LibSystemPinoutsDriverPin29(UINT8 Function);
void LibSystemPinoutsDriverPin30(UINT8 Function);
void LibSystemPinoutsDriverPin31(UINT8 Function);
void LibSystemPinoutsDriverPin32(UINT8 Function);
void LibSystemPinoutsDriverPin33(UINT8 Function);
void LibSystemPinoutsDriverPin34(UINT8 Function);
void LibSystemPinoutsDriverPin35(UINT8 Function);
void LibSystemPinoutsDriverPin36(UINT8 Function);
void LibSystemPinoutsDriverPin37(UINT8 Function);
void LibSystemPinoutsDriverPin38(UINT8 Function);
void LibSystemPinoutsDriverPin39(UINT8 Function);
void LibSystemPinoutsDriverPin40(UINT8 Function);
void LibSystemPinoutsDriverPin41(UINT8 Function);
void LibSystemPinoutsDriverPin42(UINT8 Function);
void LibSystemPinoutsDriverPin43(UINT8 Function);
void LibSystemPinoutsDriverPin44(UINT8 Function);
void LibSystemPinoutsDriverPin45(UINT8 Function);
void LibSystemPinoutsDriverPin46(UINT8 Function);
void LibSystemPinoutsDriverPin47(UINT8 Function);
void LibSystemPinoutsDriverPin48(UINT8 Function);
void LibSystemPinoutsDriverPin49(UINT8 Function);
void LibSystemPinoutsDriverPin50(UINT8 Function);
void LibSystemPinoutsDriverPin51(UINT8 Function);
void LibSystemPinoutsDriverPin52(UINT8 Function);
void LibSystemPinoutsDriverPin53(UINT8 Function);
void LibSystemPinoutsDriverPin54(UINT8 Function);
void LibSystemPinoutsDriverPin55(UINT8 Function);
void LibSystemPinoutsDriverPin56(UINT8 Function);
void LibSystemPinoutsDriverPin57(UINT8 Function);
void LibSystemPinoutsDriverPin58(UINT8 Function);
void LibSystemPinoutsDriverPin59(UINT8 Function);
void LibSystemPinoutsDriverPin60(UINT8 Function);
void LibSystemPinoutsDriverPin61(UINT8 Function);
void LibSystemPinoutsDriverPin62(UINT8 Function);
void LibSystemPinoutsDriverPin63(UINT8 Function);
void LibSystemPinoutsDriverPin64(UINT8 Function);
void LibSystemPinoutsDriverPin65(UINT8 Function);
void LibSystemPinoutsDriverPin66(UINT8 Function);
void LibSystemPinoutsDriverPin67(UINT8 Function);
void LibSystemPinoutsDriverPin68(UINT8 Function);
void LibSystemPinoutsDriverPin69(UINT8 Function);
void LibSystemPinoutsDriverPin70(UINT8 Function);
void LibSystemPinoutsDriverPin71(UINT8 Function);
void LibSystemPinoutsDriverPin72(UINT8 Function);
void LibSystemPinoutsDriverPin73(UINT8 Function);
void LibSystemPinoutsDriverPin74(UINT8 Function);
void LibSystemPinoutsDriverPin75(UINT8 Function);
void LibSystemPinoutsDriverPin76(UINT8 Function);
void LibSystemPinoutsDriverPin77(UINT8 Function);
void LibSystemPinoutsDriverPin78(UINT8 Function);
void LibSystemPinoutsDriverPin79(UINT8 Function);
void LibSystemPinoutsDriverPin80(UINT8 Function);
void LibSystemSerialIO(void);
void LibSystemSleep(void);
void LibSystemRestart(void);
void LibSystemDelay1MS(UINT16 Count);
// TimerB0
void LibTimerB0InterruptDisable(void);
void LibTimerB0InterruptEnable(void);
void LibTimerB0Init(void);
void LibInterruptTimerB0(void);
UINT32 LibTimerGet1S(void);
UINT32 LibTimerGet1MS(void);
// TimerB1
void LibInterruptTimerB1(void);
void LibTimerB1InterruptDisable(void);
void LibTimerB1InterruptEnable(void);
void LibTimerB1Init(void);
// TimerB2
void LibInterruptTimerB2(void);
void LibTimerB2InterruptDisable(void);
void LibTimerB2InterruptEnable(void);
void LibTimerB2Init(void);
// DO
void LibMcuLedOutput(UINT8 Data);
UINT8 LibFunMcuLedState(void);
UINT8 LibGetValueDOL(UINT8 Channal);
UINT8 LibSetValueDOL(UINT8 Channal,UINT8 Data);
UINT8 LibGetValueDOH(UINT8 Channal);
UINT8 LibSetValueDOH(UINT8 Channal,UINT8 Data);
// CAN
void LibCan0Init(UINT16 bps);
void LibCan1Init(UINT16 bps);
extern void LibCan0SetRecMaskId(UINT16 FrameEx, UINT32 FrameID, UINT32 MaskID);
extern void LibCan1SetRecMaskId(UINT16 FrameEx, UINT32 FrameID, UINT32 MaskID);
void LibCan0SetRecMode(UINT16 BufferID,UINT16 FrameEx,UINT32 FrameID);
void LibCan1SetRecMode(UINT16 BufferID,UINT16 FrameEx,UINT32 FrameID);
void LibCan0SendData(UINT16 BufferID,UINT32 FrameID,UINT16 FrameEx, UINT8 *Data,UINT16 DataLength);
void LibCan1SendData(UINT16 BufferID,UINT32 FrameID,UINT16 FrameEx, UINT8 *Data,UINT16 DataLength);
void LibInterruptCan0Rec(void);
void LibInterruptCan1Rec(void);
UINT8 LibCan0ReadReceiveData(UINT8 BufferID,UINT8 *Data);
UINT8 LibCan1ReadReceiveData(UINT8 BufferID,UINT8 *Data);
UINT8 LibCan0ReceiveFlag(UINT8 BufferID);
UINT8 LibCan1ReceiveFlag(UINT8 BufferID);
void LibCanSeparateExID(UINT16 *High,UINT16 *Low,UINT32 ID);
void LibCanSeparateExIDInt(UINT16 *High,UINT16 *Low,UINT32 FrameID,UINT8 FrameEx);
// SPI1
void LibSpi1RecInterrupt(void);
void LibMCP3208U5003CS(UINT8 Data);
void LibMCP3208U5013CS(UINT8 Data);
void LibSpi1Restart(void);
void LibSpi1Init(void);
void LibSpi1RecInterruptDisable(void);
void LibSpi1RecInterruptEnable(void);
UINT16 LibGetPwmCurrent(UINT8 Channal);
UINT8 LibSetPwmCurrentFilter(UINT8 Channal,UINT8 FilterNum);
// PWM
UINT8 LibPwmInit(UINT8 ModeID,UINT32 Frequency);
UINT8 LibSetPwmRatio(UINT8 Channal,UINT16 Ratio);
// SCI
void LibSciSendNumInt16(INT16 Num,UINT8 Mode,UINT8 FillZore);
void LibSciSendNumUint16(UINT16 Num,UINT8 Mode,UINT8 FillZore);
void LibSciSendNumUint8(UINT8 Num,UINT8 Mode,UINT8 FillZore);
void LibSciSendString(UINT8 *str);
void LibSciSendByte(UINT8 data);
void LibSciInit(UINT32 BitsPerSencond);
void LibSciSendLoop(void);
UINT8 LibSciSendAddOneByte(UINT8 data);
void LibInteruptSciEmpty(void);
void LibInteruptSciIdle(void);
void LibInteruptSciRec(void);
UINT16 LibSciReceiveDataLenth(void);
UINT16 LibSciSendDataLenth(void);
UINT8 LibSciReadReceiveData(void);
// PI
UINT8 LibPiSetSampleTime(UINT8 Channal,UINT16 SampleTime);
UINT16 LibPiReadFrequency(UINT8 Channal);
void LibPiComputFrequency(void);
UINT16 LibPiReadNum(UINT8 Channal);
UINT8 LibPiReset(UINT8 Channal);
void LibPiInit(void);
void LibDecInit(void);
void LibDecSetPosition(UINT8 Channal,UINT32 Data);
UINT32 LibDecGetPosition(UINT8 Channal);
// DI
UINT8 LibGetValueDIL(UINT8 Channal);
UINT8 LibGetValueDIH(UINT8 Channal);
void LibIrqaEnable(void);
void LibIrqbEnable(void);
void LibIrqaDisable(void);
void LibIrqbDisable(void);
// AI
char LibGetMcuTemperature(void);
UINT16 LibGetSystemVoltage(void);
UINT16 LibGetAiVoltage(UINT8 Channal);
UINT16 LibGetAiAdcValue(UINT8 Channal);
UINT16 LibGetAiRes(UINT8 Channal);
UINT16 LibGetAiCurrent(UINT8 Channal);
void LibMcuAdcInterruptEnable(void);
void LibMcuAdcInterruptDisable(void);
void LibMcuAdcaInterrupt(void);
void LibMcuAdcbInterrupt(void);
void LibMcuAdcInit(void);
// Motor
void LibMotorDriver(UINT8 Dir);
// watchDog
void LibWatchDogInit(UINT16 OverflowTimeMS);
void LibWatchDogFeed(void);
void LibWatchDogDisable(void);
//¶¨Ê±Æ÷
UINT8 LibTimerTon(UINT8 Channal,UINT8 In,UINT32 Pt,UINT32 *Et);
UINT8 LibTimerTof(UINT8 Channal,UINT8 In,UINT32 Pt,UINT32 *Et);
UINT8 LibTimer(UINT8 Channal,UINT8 Trigger,UINT32 Time,UINT8 Signal);
void LibInterruptTimerA0(void);
void LibInterruptTimerA1(void);
void LibInterruptTimerD1(void);
void LibInterruptTimerD2(void);
//IRQA~B
void LibIrqaInterrupt(void);
void LibIrqbInterrupt(void);
void FunAppIrqa(void);
void FunAppIrqb(void);
//SPI0
void LibFunX5325Delay(void);
void LibFunSpi0Init(void);
UINT8 LibEepromReadStatus(void);
void LibEepromWriteStatus(UINT8 Status);
void LibEepromWriteEnable(void);
UINT8 LibEepromReadByte(UINT16 Addr);
void LibEepromWriteByte(UINT16 Addr,UINT8 Data);

//PUBLIC
INT32 LibAbsInt16(INT16 a,INT16 b);
UINT16 LibAbsUint16(UINT16 a,UINT16 b);
float LibSqrt(float Data);
UINT16 LibJoinByteToUint16(UINT8 H,UINT8 L);
UINT16 LibMinUint16(UINT16 a,UINT16 b);
UINT16 LibMaxUint16(UINT16 a,UINT16 b);
void LibArrayUint16Inset(UINT16 Data,UINT16 *Array,UINT8 Length,UINT8 Method);
UINT16 LibArrayUint16Filter(UINT16 *Data,UINT8 Length,UINT8 Method);
UINT32 LibAbsUint32(UINT32 a,UINT32 b);

//FLASH
UINT8 LibFlashGetWord(UINT32 Addr,UINT16 *Data);
UINT8 LibFlashSetWord(UINT32 Addr,UINT16 Data);
UINT8 LibFlashSetBlock(UINT32 Addr,UINT16 *Data,UINT32 Count);
UINT8 LibFlashGetBlock(UINT32 Addr,UINT16 *Data,UINT32 Count);
UINT8 LibFlashSetGlobalProtection(UINT8 ProtectAll);
UINT8 LibFlashBusy(void);
void LibFlashInit(void);